# eaton-epdu-blue-switched.dev
# Eaton Vertical Mount (0U) Switched ePDUs with Blue and Yellow Local Display
# Contributed by Paul Anderson (panderson@sgi.com)
#
# Example powerman.conf device line:
#   device "epdu1" "eaton-epdu-blue-switched" "/usr/sbin/snmppower -h epdu1|&"
#
# N.B. This script requires that you download and install the Eaton ePDU MIB
# where net-snmp can find it, e.g.:
#   /usr/share/snmp/mibs/Pulizzi-Vertical-SW-ePDU.txt
#
# Download ePDU_MIB_Switched_Blue_Display.zip from:
#   powerquality.eaton.com/Support/Software-Drivers/Downloads/ePDU-firmware.asp
#
specification  "eaton-epdu-blue-switched" {
        timeout         10

        plug name {
                "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10"
                "11" "12" "13" "14" "15" "16" "17" "18" "19" "20"
                "21" "22" "23" "24"
        }
	script login {
                expect "snmppower> "
                send "start_v2c private\n"
                expect "snmppower> "
		send "mib Pulizzi\n"
                expect "snmppower> "
        }
	script logout {
                send "finish\n"
                expect "snmppower> "
        }
	script status {
                send "get Pulizzi::outlet%sStatus.0\n"
                expect "Pulizzi::outlet([0-9]+)Status.0: (1|2)\n"
                setplugstate $1 $2 on="1" off="2"
                expect "snmppower> "
        }
	script on {
                send "set Pulizzi::outlet%sCommand.0 i 1\n"
                expect   "Pulizzi::outlet[0-9]+Command.0: 1\n"
                expect "snmppower> "
                delay 0.3
        }
	script off {
                send "set Pulizzi::outlet%sCommand.0 i 2\n"
                expect   "Pulizzi::outlet[0-9]+Command.0: 2\n"
                expect  "snmppower> "
        }
	script reset {
                send "set Pulizzi::outlet%sCommand.0 i 3\n"
                expect   "Pulizzi::outlet[0-9]+Command.0: 3\n"
                expect "snmppower> "
                delay 0.3
        }
	script cycle {
                send "set Pulizzi::outlet%sCommand.0 i 2\n"
                expect   "Pulizzi::outlet[0-9]+Command.0: 2\n"
                expect "snmppower> "
                delay 5
                send "set Pulizzi::outlet%sCommand.0 i 1\n"
                expect   "Pulizzi::outlet[0-9]+Command.0: 1\n"
                expect "snmppower> "
                delay 0.3
        }
}
